{"ast":null,"code":"var _jsxFileName = \"/Users/joshcodrescu/Desktop/coin-flip/client/src/Header.js\";\nimport CoinLogo from './CoinLogo';\nimport Hamburger from './Hamburger';\nimport './Header.css';\nimport coinLoading from './coin-back-loading.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header(props) {\n  // const connectToPhantom = async (setResp) => {\n  //     const isPhantomInstalled = window.solana && window.solana.isPhantom;\n  //     if (!isPhantomInstalled) {\n  //         alert(\"No Phantom wallet detected\");\n  //         return;\n  //     }\n  //     try {\n  //         const resp = await window.solana.connect();\n  //         resp.publicKey.toString();\n  //         console.log(resp.toString());\n  //     } catch (err) {\n  //         console.log(\"rejected\");\n  //     }\n  // }\n  // const connectToMetamask = async (setResp) => {\n  //     const isMetamaskInstalled = window.ethereum;\n  //     console.log(window.ethereum);\n  //     if (!isMetamaskInstalled) {\n  //         alert(\"No Metamask wallet detected\");\n  //         return;\n  //     }\n  //     try {\n  //         const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  //         const account = accounts[0];\n  //         console.log(accounts);\n  //     } catch (err) {\n  //         console.log(\"rejected\");\n  //     }\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StartHeader\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      id: \"StartLogo\",\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"StartLogo\",\n        children: [/*#__PURE__*/_jsxDEV(CoinFlip, {\n          className: \"CoinFlipAnimation\",\n          width: 68,\n          height: 68,\n          animation: 'loading',\n          winningSide: null,\n          image: coinLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"flip\",\n          children: \"FLIP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hamburger, {\n      onMenuClick: props.onMenuClick,\n      width: \"50\",\n      height: \"50\",\n      class: \"Hamburger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Header;\n;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/joshcodrescu/Desktop/coin-flip/client/src/Header.js"],"names":["CoinLogo","Hamburger","coinLoading","Header","props","onMenuClick"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAG,MAAA,EAAE,EAAC,WAAN;AAAkB,MAAA,IAAI,EAAC,GAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,mBAApB;AAAwC,UAAA,KAAK,EAAE,EAA/C;AAAmD,UAAA,MAAM,EAAE,EAA3D;AAA+D,UAAA,SAAS,EAAE,SAA1E;AAAqF,UAAA,WAAW,EAAE,IAAlG;AAAwG,UAAA,KAAK,EAAEF;AAA/G;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAM,UAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAYI,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEE,KAAK,CAACC,WAA9B;AAA2C,MAAA,KAAK,EAAC,IAAjD;AAAsD,MAAA,MAAM,EAAC,IAA7D;AAAkE,MAAA,KAAK,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;KAjDQF,M;AAiDR;AAED,eAAeA,MAAf","sourcesContent":["import CoinLogo from './CoinLogo';\nimport Hamburger from './Hamburger'\nimport './Header.css';\nimport coinLoading from './coin-back-loading.svg';\n\nfunction Header(props) {\n    // const connectToPhantom = async (setResp) => {\n    //     const isPhantomInstalled = window.solana && window.solana.isPhantom;\n    //     if (!isPhantomInstalled) {\n    //         alert(\"No Phantom wallet detected\");\n    //         return;\n    //     }\n    //     try {\n    //         const resp = await window.solana.connect();\n    //         resp.publicKey.toString();\n    //         console.log(resp.toString());\n    //     } catch (err) {\n    //         console.log(\"rejected\");\n    //     }\n    // }\n\n    // const connectToMetamask = async (setResp) => {\n    //     const isMetamaskInstalled = window.ethereum;\n    //     console.log(window.ethereum);\n    //     if (!isMetamaskInstalled) {\n    //         alert(\"No Metamask wallet detected\");\n    //         return;\n    //     }\n    //     try {\n    //         const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    //         const account = accounts[0];\n    //         console.log(accounts);\n    //     } catch (err) {\n    //         console.log(\"rejected\");\n    //     }\n    // }\n\n    return (\n        <div className='StartHeader'>\n            <div className=''>\n                {/* <button onClick={() => {connectToPhantom(props.setResp)}}>Connect to Phantom</button>\n                <button onClick={() => {connectToMetamask(props.setResp)}}>Connect to Metamask</button> */}\n            </div>\n            <a id=\"StartLogo\" href='/'>\n                <div className='StartLogo'>\n                    <CoinFlip className=\"CoinFlipAnimation\" width={68} height={68} animation={'loading'} winningSide={null} image={coinLoading}/>\n                    {/* <CoinLogo width=\"68\" height=\"68\" class=\"CoinLogo\"/> */}\n                    <span id=\"flip\">FLIP</span>\n                </div>\n            </a>\n            <Hamburger onMenuClick={props.onMenuClick} width=\"50\" height=\"50\" class=\"Hamburger\"/>\n        </div>  \n        \n    );\n};\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}