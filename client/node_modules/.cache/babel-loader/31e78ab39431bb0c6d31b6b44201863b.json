{"ast":null,"code":"var _jsxFileName = \"/Users/joshcodrescu/Desktop/coin-flip/client/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport coinReady from './coin-back-ready.svg';\nimport coinLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport Confetti from 'react-confetti';\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const location = useLocation();\n  const [gameData, changeGameData] = useState(location.state ? location.state : null);\n  const [gameFinished, setGameFinished] = useState(false);\n\n  async function loadGame() {\n    let requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        gameID: gameData.gameID\n      })\n    };\n    fetch('/checkGameState', requestOptions).then(result => result.json()).then(result => {\n      if (result.name) {\n        changeGameData({\n          'p1': {\n            'name': gameData.name,\n            'side': gameData.side,\n            'wallet': gameData.wallet\n          },\n          'p2': {\n            'name': result.name,\n            'side': result.side,\n            'wallet': result.wallet\n          },\n          'winner': result.winner,\n          'bet': gameData.bet,\n          'gameID': gameData.gameID\n        });\n      } else if (result.error) {\n        console.log(result.error);\n        changeGameData(null); // this will cause the client to be navigated to home and the game be abandoned\n      } else {\n        // if player 2 not found (result.name = null) then poll again\n        setTimeout(loadGame, 3000);\n      }\n    }).catch(err => {\n      // this will cause the client to be navigated to home and the game be abandoned\n      console.log(err);\n      changeGameData(null);\n    });\n  }\n\n  useEffect(() => {\n    if (gameData === null) {\n      return; // this is to not allow people onto this page if they haven't gone through the 'flip' page\n    } else if (!gameData.winner) {\n      setTimeout(loadGame, 3000); // this client is p1, so schedule the polling for p2 to join\n    } else if (gameData.winner) {\n      setTimeout(() => {\n        setGameFinished(true);\n      }, 6000);\n    }\n  }, [gameData]);\n  return gameData ? /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GamePrize\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GamePrizeText\",\n        children: \"Cash Prize:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GamePrizeAmount\",\n        children: gameData.bet * 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"GameMain\",\n      children: [/*#__PURE__*/_jsxDEV(Player, {\n        name: gameData.p1.name,\n        side: gameData.p1.side,\n        result: gameFinished ? gameData.winner === gameData.p1.side ? '-winner' : '' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CoinFlip, {\n        animation: gameFinished ? 'done' : gameData.winner === null ? 'loading' : 'ready',\n        winningSide: gameData.winner,\n        image: gameData.winner === null ? coinLoading : coinReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), gameData.winner === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '300px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Player, {\n        name: gameData.p2.name,\n        side: gameData.p2.side,\n        wallet: gameData.p2.wallet,\n        result: gameFinished ? gameData.winner === gameData.p2.side ? '-winner' : '' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 101\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), gameFinished ? /*#__PURE__*/_jsxDEV(Confetti, {\n      confettiSource: {\n        x: gameData.winner === gameData.p1.side ? 0 : window.innerWidth - 300,\n        y: 0,\n        w: 300,\n        h: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }, this) : null, gameFinished ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameOverOptions\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"GameOverOption\",\n        href: \"/flip\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"GameOverOption\",\n        href: \"/\",\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 30\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Game, \"PLV6tk3zOCihmlDxzDOYolLGn5k=\", false, function () {\n  return [useLocation];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/joshcodrescu/Desktop/coin-flip/client/src/Game.js"],"names":["CoinFlip","useLocation","useEffect","useState","coinReady","coinLoading","Player","Confetti","Navigate","Game","location","gameData","changeGameData","state","gameFinished","setGameFinished","loadGame","requestOptions","method","headers","body","JSON","stringify","gameID","fetch","then","result","json","name","side","wallet","winner","bet","error","console","log","setTimeout","catch","err","p1","width","height","p2","x","window","innerWidth","y","w","h"],"mappings":"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","sourcesContent":["import CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport coinReady from './coin-back-ready.svg';\nimport coinLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport Confetti from 'react-confetti';\nimport { Navigate } from \"react-router-dom\";\n\nfunction Game() {\n    const location = useLocation();\n    const [gameData, changeGameData] = useState(location.state ? location.state : null);\n    const [gameFinished, setGameFinished] = useState(false);\n\n    async function loadGame() {\n        let requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({gameID: gameData.gameID})\n        };\n        fetch('/checkGameState', requestOptions)\n            .then(result => result.json())\n            .then(result => {\n                if (result.name) {\n                    changeGameData({\n                        'p1': {'name': gameData.name, 'side': gameData.side, 'wallet': gameData.wallet},\n                        'p2': {'name': result.name, 'side': result.side, 'wallet': result.wallet},\n                        'winner': result.winner,\n                        'bet': gameData.bet,\n                        'gameID': gameData.gameID\n                    })\n                }\n                else if (result.error) {\n                    console.log(result.error);\n                    changeGameData(null); // this will cause the client to be navigated to home and the game be abandoned\n                }\n                else { // if player 2 not found (result.name = null) then poll again\n                    setTimeout(loadGame, 3000); \n                }\n            })\n            .catch(err => { // this will cause the client to be navigated to home and the game be abandoned\n                console.log(err);\n                changeGameData(null);\n            })\n    }\n\n    useEffect(() => {\n        if (gameData === null) {\n            return; // this is to not allow people onto this page if they haven't gone through the 'flip' page\n        }\n        else if (!gameData.winner) { \n            setTimeout(loadGame, 3000); // this client is p1, so schedule the polling for p2 to join\n        }\n        else if (gameData.winner) {\n            setTimeout(() => {setGameFinished(true)}, 6000);\n        }\n    }, [gameData]);\n\n    return (\n        (gameData ?\n        <div id=\"Game\">\n            <div className=\"GamePrize\">\n                <div className=\"GamePrizeText\">Cash Prize:</div>\n                <div className=\"GamePrizeAmount\">{gameData.bet * 2}</div>\n            </div>\n            <div id=\"GameMain\">\n                <Player name={gameData.p1.name} side={gameData.p1.side} result={gameFinished ? (gameData.winner === gameData.p1.side ? '-winner' : '') : ''}/>\n                <CoinFlip animation={gameFinished ? 'done' : (gameData.winner === null ? 'loading' : 'ready')} winningSide={gameData.winner} image={gameData.winner === null ? coinLoading : coinReady}/>\n                {gameData.winner === null ? <div style={{width: '300px', height: '150px'}}></div> : <Player name={gameData.p2.name} side={gameData.p2.side} wallet={gameData.p2.wallet} result={gameFinished ? (gameData.winner === gameData.p2.side ? '-winner' : '') : ''}/>}\n            </div>\n            {gameFinished ? <Confetti confettiSource={{ x: (gameData.winner === gameData.p1.side ? 0 : window.innerWidth - 300), y: 0, w: 300, h: 0 }}/> : null}\n            {gameFinished ?  <div className=\"GameOverOptions\">\n                                    <a className=\"GameOverOption\" href=\"/flip\">Play Again</a>\n                                    <a className=\"GameOverOption\" href=\"/\">Return to Home</a>\n                                </div> \n                        : null\n            }\n        </div>\n        : <Navigate to=\"/\" />)\n    );\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}