[{"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\index.js":"1","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Router.js":"3","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\App.js":"4","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Flip.js":"5","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Game.js":"6","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\WaitingPlayers.js":"7","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\OverlayMenu.js":"8","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Header.js":"9","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\PlayOptions.js":"10","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\CoinFlip.js":"11","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Player.js":"12","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Hamburger.js":"13","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\QuitButton.js":"14"},{"size":543,"mtime":1654559811000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1654559811000,"results":"17","hashOfConfig":"16"},{"size":504,"mtime":1654559811000,"results":"18","hashOfConfig":"16"},{"size":753,"mtime":1654559811000,"results":"19","hashOfConfig":"16"},{"size":4495,"mtime":1654559811000,"results":"20","hashOfConfig":"16"},{"size":4330,"mtime":1654559811000,"results":"21","hashOfConfig":"16"},{"size":1638,"mtime":1654559811000,"results":"22","hashOfConfig":"16"},{"size":1257,"mtime":1654559811000,"results":"23","hashOfConfig":"16"},{"size":755,"mtime":1654559811000,"results":"24","hashOfConfig":"16"},{"size":305,"mtime":1654559811000,"results":"25","hashOfConfig":"16"},{"size":443,"mtime":1654559811000,"results":"26","hashOfConfig":"16"},{"size":550,"mtime":1654559811000,"results":"27","hashOfConfig":"16"},{"size":303,"mtime":1654559811000,"results":"28","hashOfConfig":"16"},{"size":313,"mtime":1654559811000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l15mz1",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\index.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Router.js",["76"],[],"import App from './App';\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport Flip from './Flip';\nimport Game from './Game';\n\nfunction Router() {\n    return (\n        <BrowserRouter className=\"PlayOptions\">\n            <Routes>\n                <Route path=\"/\" element={<App />} />\n                <Route path=\"flip\" element={<Flip />} />\n                <Route path=\"game\" element={<Game />} />\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default Router;","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\App.js",["77"],[],"import { useState, useEffect } from \"react\";\nimport OverlayMenu from \"./OverlayMenu\";\nimport PlayOptions from \"./PlayOptions\";\nimport Header from \"./Header\";\nimport WaitingPlayers from \"./WaitingPlayers\";\nimport './App.css';\n\nfunction App() {\n    const [isMenuActive, activeMenu] = useState(false);\n    \n    return (\n    <div className=\"app\">\n        <Header onMenuClick={() => activeMenu(!isMenuActive)}/>\n        <div className='AppBody'>\n            <WaitingPlayers className=\"WaitingPlayers\"/>\n            <PlayOptions/>\n            <div className=\"AppEmptyDiv\"></div>\n        </div>\n        <OverlayMenu \n            isMenuActive={isMenuActive}\n            closeMenu={() => activeMenu(false)} \n            />\n    </div>\n    )\n}\n\nexport default App;","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Flip.js",["78"],[],"import { useEffect, useState } from \"react\";\nimport OverlayMenu from \"./OverlayMenu\";\nimport './Flip.css';\nimport Header from \"./Header\";\nimport { Navigate } from \"react-router-dom\";\n\nfunction Flip() {\n    const [isMenuActive, activeMenu] = useState(false);\n    const [name, changeName] = useState(null);\n    const [bet, changeBet] = useState(\"None\");\n    const [side, changeSide] = useState('Choose For Me');\n    const [game, setGame] = useState(null);\n    const [loading, setLoading] = useState(false);\n    let ready = false;\n\n    if (name !== null) {\n        ready = true;\n    }\n\n    async function joinGame() {\n        let requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({name: name, side: side, bet: bet})\n        };\n        fetch('/joinGame', requestOptions)\n            .then(result => result.json())\n            .then(result => {\n                let game = {\n                    'p1': {'name': name, 'side': result.givenSide},\n                    'p2': {'name': result.name, 'side': result.side},\n                    'bet': bet,\n                    'winner': result.winner,\n                    'gameID': result.gameID\n                }\n                setGame(game);\n            })\n            .catch(err => {\n                console.log(err);\n                console.log(\"didnt work\")\n            });\n    }\n\n    useEffect(() => {\n        if (loading) {\n            joinGame();\n        }\n    }, [loading]);\n\n    return (\n        !game ?\n        <div>\n            <Header onMenuClick={() => activeMenu(!isMenuActive)}/>\n            <OverlayMenu \n                isMenuActive={isMenuActive}\n                closeMenu={() => activeMenu(false)} \n            />\n            <div className=\"flip\">\n                <div className='flipRow' id=\"screenName\">\n                    <div className='flipRowText' id=\"screenNameText\">Screen Name:</div>\n                    <input className='flipRowInput' id=\"screenNameInput\"\n                        type=\"text\"\n                        placeholder=\"Input Screen Name\"\n                        value={name !== null ? name : ''}\n                        onChange={(event) => {changeName(event.target.value)}}\n                    />\n                </div>\n                <div className='flipRow' id=\"bet\">\n                    <div className='flipRowText' id=\"betText\">Bet Amount:</div>\n                    <div className='flipRowInput' id=\"betInput\">\n                            <button onClick={() => changeBet(\"None\")} className={\"betButton\" + (bet === \"None\" ? \"-selected\" : \"\")}>None</button>\n                            <button onClick={() => changeBet(\"5\")} className={\"betButton\" + (bet === \"5\" ? \"-selected\" : \"\")}>5</button>\n                            <button onClick={() => changeBet(\"10\")} className={\"betButton\" + (bet === \"10\" ? \"-selected\" : \"\")}>10</button>\n                            <button onClick={() => changeBet(\"25\")} className={\"betButton\" + (bet === \"25\" ? \"-selected\" : \"\")}>25</button>\n                            <button onClick={() => changeBet(\"50\")} className={\"betButton\" + (bet === \"50\" ? \"-selected\" : \"\")}>50</button>\n                    </div>\n                </div>\n                <div className='flipRow' id=\"side\">\n                    <div className='flipRowText' id=\"sideText\">Side:</div>\n                    <div className='flipRowInput' id=\"sideInput\">\n                        <button onClick={() => changeSide(\"Heads\")} className={\"sideButton\" + (side === \"Heads\" ? \"-selected\" : \"\")}>Heads</button>\n                        <button onClick={() => changeSide(\"Tails\")} className={\"sideButton\" + (side === \"Tails\" ? \"-selected\" : \"\")}>Tails</button>\n                        <button onClick={() => changeSide(\"Choose For Me\")} className={\"sideButton\" + (side === \"Choose For Me\" ? \"-selected\" : \"\")}>Random</button>\n                    </div>\n                </div>\n                {ready ?  \n                    <button onClick={() => {setLoading(true)}} className=\"flipRow\" id={\"readyButton\" + (ready ? '-ready' : '')}>Ready</button>\n                    :\n                    <button id={\"readyButton\" + (ready ? '-ready' : '')}>Ready</button> \n                }\n                {loading ?\n                    <div>loading</div>\n                    :\n                    null\n                }\n            </div>\n        </div>\n        : <Navigate state={game} id=\"readyLink\" to=\"/game\" />\n    )\n}\n\nexport default Flip;","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Game.js",["79"],[],"import CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport coinReady from './coin-back-ready.svg';\nimport coinLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport Confetti from 'react-confetti';\nimport { Navigate } from \"react-router-dom\";\n\nfunction Game() {\n    const location = useLocation();\n    const [gameData, changeGameData] = useState(location.state ? location.state : null);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [startFlip, setStartFlip] = useState(false)\n\n    async function loadGame() {\n        let requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({gameID: gameData.gameID})\n        };\n        // console.log(gameData.gameID)\n        fetch('/checkGameState', requestOptions)\n            .then(result => result.json())\n            .then(result => {\n                if (result.name) {\n                    changeGameData({\n                        'p1': {'name': gameData.p1.name, 'side': gameData.p1.side},\n                        'p2': {'name': result.name, 'side': result.side},\n                        'winner': result.winner,\n                        'bet': gameData.bet,\n                        'gameID': gameData.gameID\n                    })\n                }\n                else if (result.error) {\n                    console.log(result.error);\n                    changeGameData(null); // this will cause the client to be navigated to home and the game be abandoned\n                }\n                else { // if player 2 not found (result.name = null) then poll again\n                    setTimeout(loadGame, 2000); \n                }\n            })\n            .catch(err => { // this will cause the client to be navigated to home and the game be abandoned\n                console.log(err);\n                changeGameData(null);\n            })\n    }\n\n    useEffect(() => {\n        if (gameData === null) {\n            return; // this is to not allow people onto this page if they haven't gone through the 'flip' page\n        }\n        else if (!gameData.winner) { \n            setTimeout(loadGame, 2000); // this client is p1, so schedule the polling for p2 to join\n        }\n        else if (gameData.winner) {\n            setTimeout(() => {setStartFlip(true)}, 3000);\n            setTimeout(() => {setGameFinished(true)}, 8000);\n        }\n    }, [gameData]);\n\n    return (\n        (gameData ?\n        <div id=\"Game\">\n            <div className=\"GamePrize\">\n                <div className=\"GamePrizeText\">Cash Prize:</div>\n                <div className=\"GamePrizeAmount\">{gameData.bet !== \"None\" ? gameData.bet * 2 : \"0\"}</div>\n            </div>\n            <div id=\"GameMain\">\n                <Player name={gameData.p1.name} side={gameData.p1.side} result={gameFinished ? (gameData.winner === gameData.p1.side ? '-winner' : '') : ''}/>\n                <CoinFlip className=\"CoinFlipAnimation\" width={300} height={300} animation={gameFinished ? 'done' : (!startFlip ? 'loading' : 'ready')} winningSide={!startFlip ? null : gameData.winner} image={!startFlip ? coinLoading : coinReady}/>\n                {gameData.winner === null ? <div style={{width: '400px', height: '150px'}}></div> : <Player name={gameData.p2.name} side={gameData.p2.side} wallet={gameData.p2.wallet} result={gameFinished ? (gameData.winner === gameData.p2.side ? '-winner' : '') : ''}/>}\n            </div>\n            {gameFinished && gameData.p2.side === gameData.winner ? <Confetti confettiSource={{ x: (gameData.winner === gameData.p1.side ? 0 : window.innerWidth - 300), y: 0, w: 300, h: 0 }}/> : null}\n            {gameFinished && gameData.p1.side === gameData.winner ? <Confetti confettiSource={{ x: 0, y: 0, w: 300, h: 0 }}/> : null}\n            {gameFinished ?  <div className=\"GameOverOptions\">\n                                    <a className=\"GameOverOption\" href=\"/flip\">Play Again</a>\n                                    <a className=\"GameOverOption\" href=\"/\">Return to Home</a>\n                                </div> \n                        : <div className=\"GameOverOptions\"></div>\n            }\n        </div>\n        : <Navigate to=\"/\" />)\n    );\n}\n\nexport default Game;","C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\WaitingPlayers.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\OverlayMenu.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Header.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\PlayOptions.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\CoinFlip.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Player.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\Hamburger.js",[],[],"C:\\Users\\Federico\\Downloads\\Coin-Flip-main\\client\\src\\QuitButton.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":2,"column":40,"nodeType":"82","messageId":"83","endLine":2,"endColumn":48},{"ruleId":"80","severity":1,"message":"84","line":1,"column":20,"nodeType":"82","messageId":"83","endLine":1,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":48,"column":8,"nodeType":"87","endLine":48,"endColumn":17,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":61,"column":8,"nodeType":"87","endLine":61,"endColumn":18,"suggestions":"90"},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'joinGame'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has a missing dependency: 'loadGame'. Either include it or remove the dependency array.",["92"],{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [joinGame, loading]",{"range":"97","text":"98"},"Update the dependencies array to be: [gameData, loadGame]",{"range":"99","text":"100"},[1496,1505],"[joinGame, loading]",[2516,2526],"[gameData, loadGame]"]